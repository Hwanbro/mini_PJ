{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DCUSW\\\\Documents\\\\Team_project\\\\frontend\\\\src\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n\n  // State for handling feedback messages\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n\n  // useHistory hook for redirection\n  const history = useHistory();\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Reset messages\n    setMessage('');\n    setError('');\n\n    // Simple form validation\n    if (!title.trim() || !content.trim()) {\n      setError('Both title and content are required.');\n      return;\n    }\n    try {\n      // Retrieve token from localStorage if authentication is implemented\n      const token = localStorage.getItem('token');\n\n      // Configure headers, including authorization if needed\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && {\n            Authorization: `Bearer ${token}`\n          })\n        }\n      };\n\n      // Send POST request to create a new post\n      const response = await axios.post('http://localhost:5000/api/posts/create', {\n        title,\n        content\n      }, config);\n\n      // Handle successful response\n      setMessage('Post created successfully!');\n      console.log('Post created:', response.data);\n\n      // Optionally, redirect to the post list or the new post's detail page\n      // history.push('/'); // Redirect to post list\n      // history.push(`/post/${response.data._id}`); // Redirect to the new post's detail page\n\n      // Clear the form\n      setTitle('');\n      setContent('');\n    } catch (err) {\n      console.error(err);\n      // Handle different error responses\n      if (err.response && err.response.data && err.response.data.msg) {\n        setError(err.response.data.msg);\n      } else {\n        setError('An error occurred while creating the post.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Enter post title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"content\",\n          children: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"content\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          placeholder: \"Enter post content\",\n          rows: \"10\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(PostForm, \"JilRs4cdbM9In+ZPXXompIQEleU=\", false, function () {\n  return [useHistory];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["React","useState","axios","useHistory","jsxDEV","_jsxDEV","PostForm","_s","title","setTitle","content","setContent","message","setMessage","error","setError","history","handleSubmit","e","preventDefault","trim","token","localStorage","getItem","config","headers","Authorization","response","post","console","log","data","err","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","rows","_c","$RefreshReg$"],"sources":["C:/Users/DCUSW/Documents/Team_project/frontend/src/components/PostForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PostForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n\r\n  // State for handling feedback messages\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  // useHistory hook for redirection\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset messages\r\n    setMessage('');\r\n    setError('');\r\n\r\n    // Simple form validation\r\n    if (!title.trim() || !content.trim()) {\r\n      setError('Both title and content are required.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Retrieve token from localStorage if authentication is implemented\r\n      const token = localStorage.getItem('token');\r\n\r\n      // Configure headers, including authorization if needed\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...(token && { Authorization: `Bearer ${token}` }),\r\n        },\r\n      };\r\n\r\n      // Send POST request to create a new post\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/posts/create',\r\n        { title, content },\r\n        config\r\n      );\r\n\r\n      // Handle successful response\r\n      setMessage('Post created successfully!');\r\n      console.log('Post created:', response.data);\r\n\r\n      // Optionally, redirect to the post list or the new post's detail page\r\n      // history.push('/'); // Redirect to post list\r\n      // history.push(`/post/${response.data._id}`); // Redirect to the new post's detail page\r\n\r\n      // Clear the form\r\n      setTitle('');\r\n      setContent('');\r\n    } catch (err) {\r\n      console.error(err);\r\n      // Handle different error responses\r\n      if (err.response && err.response.data && err.response.data.msg) {\r\n        setError(err.response.data.msg);\r\n      } else {\r\n        setError('An error occurred while creating the post.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-form-container\">\r\n      <h2>Create a New Post</h2>\r\n      {message && <div className=\"success-message\">{message}</div>}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      <form onSubmit={handleSubmit} className=\"post-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Title:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"Enter post title\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"content\">Content:</label>\r\n          <textarea\r\n            id=\"content\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            placeholder=\"Enter post content\"\r\n            rows=\"10\"\r\n            required\r\n          ></textarea>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Create Post\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}